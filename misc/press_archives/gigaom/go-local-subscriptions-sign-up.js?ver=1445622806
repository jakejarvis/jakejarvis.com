(function( $ ) {
	'use strict';

	$(function() {
		// define few util functions
		var go_local_subscriptions_util = {};

		// parse post id and vertical from the current post
		go_local_subscriptions_util.parse_id_vertical = function() {
			var post_id = '';
			var vertical = '';
			var classes = $('body').attr('class').split(/\s+/);
			$.each( classes, function( i, v ) {
				var stuff = v.split(/-/);
				if( 'postid' === stuff[0] ) {
					post_id = stuff[1];
				}
				else if( 'vertical' === stuff[0] ) {
					// vertical names may contain dashes (-)
					stuff.shift();
					vertical = stuff.join( '-' );
				}
			});

			return { post_id: post_id, vertical: vertical };
		}; //END parse_id_vertical

		//--------------------------------------------------------------------
		// our callbacks
		$(document).on( 'submit', '.subscribe', function( e ) {
			e.preventDefault();
			$('.subscribe button[type="submit"]').addClass('disabled');
		});

		$(document).on( 'keydown', '.subscribe input', function( e ) {
			var $submit = $('.subscribe button[type="submit"]');
			$submit.removeClass('disabled');
		});

		$(document).on( 'change', '.subscribe select', function( e ) {
			var $submit = $('.subscribe button[type="submit"]');
			$submit.removeClass('disabled');
		});

		$(document).on( 'click', '.go-local-subscriptions-signup-button .button, .go-local-subscriptions-signup-link', function( e ) {
			// by default assume logged-in users have emails.
			var has_email = $('body').hasClass('logged-in');

			if ( 'undefined' !== typeof go_local_subscriptions_settings.user_has_email ) {
				// check if the server has an email for this user or not
				// the type of values from wp_localize_script() is string
				has_email = go_local_subscriptions_settings.user_has_email === '1' ? true : false;
			}

			// get the post id and vertical of the page we're on
			var id_vertical = go_local_subscriptions_util.parse_id_vertical();

			// only show the lightbox if we don't have the user's email
			if ( ( false === $(this).hasClass( 'nojs' ) ) && ( false === has_email ) ) {
				e.preventDefault();
				var redirect = $(this).data('redirect');
				redirect = redirect ? '&go-subscriptions[redirect]=' + encodeURIComponent( redirect ) : '';

				var referringurl = $(this).data('referring-url');
				referringurl = referringurl ? '&[referring_url]=' + encodeURIComponent( referringurl ) : '';

				var lightbox_size = 307;

				if ( $('body').hasClass( 'go-device-tablet' ) || $('body').hasClass( 'go-device-full' ) ) {
					lightbox_size = 435;
				}

				$(this).colorbox({
					href: go_local_subscriptions_settings.ajax_url + '?action=go-subscriptions-signup-form' + redirect + referringurl + '&go-subscriptions[converted_post_id]=' + id_vertical.post_id + '&go-subscriptions[converted_vertical]=' + id_vertical.vertical,
					close: 'x',
					open: true,
					title: ' ',
					width: lightbox_size,
					scrolling: false,

					onLoad: function() {
						var $colorbox = $('#colorbox');
						$colorbox.addClass('go-local-subscriptions-signup-lightbox');
					},
					onClosed: function() {
						$('.go-local-subscriptions-signup-lightbox').removeClass('go-local-subscriptions-signup-lightbox');
					},
					onComplete : function() {
						$( '#colorbox' ).find( 'input:visible:first' ).focus();

						// we only want to auto focus if placeholders are
						// supported...otherwise the browsers without
						// placeholder will never see the email label
						if( ! Modernizr || Modernizr.input.placeholder ) {
							$('.go-local-subscriptions-signup-lightbox input[name="go-subscriptions[email]"]').focus();
						}

						$(this).colorbox.resize();
					}
				});
			}//end if
			else if ( ( false === $(this).hasClass( 'nojs' ) ) && ( true === has_email ) )
			{
				// always update converted meta when we get here and the
				// user is logged in, since the user has not subscribed yet
				e.preventDefault();

				var ajax_url = go_local_subscriptions_settings.update_converted_meta_url + '&go-subscriptions[converted_post_id]=' + id_vertical.post_id + '&go-subscriptions[converted_vertical]=' + id_vertical.vertical + '&redirect=' + encodeURIComponent( this.href );

				window.location = ajax_url;
			}//else if
		});

		// Display the signup lightbox if the #go-local-subscriptions-signup hash is present
		if ( '#go-local-subscriptions-signup' === window.location.hash ) {
			$( '.go-local-subscriptions-signup-button .button, .go-local-subscriptions-signup-link' ).trigger( 'click' );
		}//END if
	});

	$(document).on( 'submit', '#cancel-form', function( e ) {
		var $el = $(this);

		if ( ! $el.find('input[type="checkbox"]').is(':checked') ) {
			$el.find('#cancel-errors').html('You must confirm your cancellation');
			e.preventDefault();
		}//end if
	});
})( jQuery );
